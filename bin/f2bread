#!/usr/bin/env ruby

require 'f2bread'

# Global vars
$version = "0.0.1-alpha"
filename = File.basename(__FILE__)
$banner = "#{filename} #{$version}\n--------------------------------------------------------\n"
pwd = File.dirname(File.expand_path(__FILE__))
$GeoIP = "#{pwd}/../lib/GeoIP.dat"

#optparse options
options = {:no => 0}                         

optparse = OptionParser.new do |opts|

	opts.banner = "Usage: f2bread -l /path/to/fail2ban.log -s country -n 5\n"

	opts.on('-l', '--log FILE', 'Define the location of fail2ban.log. Default is /var/log/fail2ban.log, requires root priviledges') do |log|
		options[:log] = log
	end

	opts.on('-n', '--no N', Integer, 'Number of top entries to be displayed. By default all entries are displayed.') do |no|
		if no > 0
			options[:no] = no
		else
			warn "Negative value is not accepted. Using default '0'"
		end
	end

	# next version
	# opts.on('-r', '--resolv', 'Resolv hostnames on IP addresses') do |resolv|
	# options[:resolv] = resolv
	# end

	opts.on('-i', '--info', 'Display fail2ban.log summary') do |info|
		options[:info] = info
	end

	# http://ruby.about.com/od/advancedruby/a/optionparser2.htm
	options[:sort] = :yes
	opts.on('-s', '--sort OPT', [:date, :country, :ip], 'Sorts by [date, country, ip (ip frequency)]') do |sort|
		options[:sort] = sort
	end

	opts.on('-v', '--version', 'Display version') do
		puts $banner
		exit
	end

	opts.on('-h', '--help', 'Display help menu') do
		puts opts
		exit
	end
end

optparse.parse!

# adjust $logfile and $no 
if options[:log]  
	$logfile = options[:log] 
	$f2b = F2bread.new($logfile)
else	
	if File.exists?('/var/log/fail2ban.log')
		$logfile = '/var/log/fail2ban.log'
		$f2b = F2bread.new($logfile)
	else
		puts $banner
		puts "No fail2ban.log found!"
		puts "Type '#{filename} -h' for help"
		exit
	end
end

if options[:no] 
	begin
		$no = Integer(options[:no])
	rescue ArgumentError
		puts "#{$no} is not an Integer!"
	else
		true
	end	
else
	$no = 0
end

# exec starts here
if options[:info]
	$f2b.info
elsif options[:sort]
	if options[:sort] == :date
		$f2b.sort_by_date($no)
	elsif options[:sort] == :country
		$f2b.sort_by_country($no)
	elsif options[:sort] == :ip
		$f2b.sort_by_ip($no)
	else
		puts "Option not recognized for '--sort', please read '--help'"
	end
else
	puts "Option not recognized. Type '#{__FILE__} -h' "
end
